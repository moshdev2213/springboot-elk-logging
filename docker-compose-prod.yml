version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres-prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - elk-network-prod

  # PG Admin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-prod
    depends_on:
      - postgres
    ports:
      - "5052:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@prod.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data_prod:/var/lib/pgadmin
    networks:
      - elk-network-prod

  # kafka based services(Zookeeper-free)
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka-prod
    ports:
      - "9194:9092"
    volumes:
      - kafka_data_prod:/bitnami/kafka
    environment:
      # Enable KRaft mode
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9194
      # Generate a cluster ID
      - KAFKA_CLUSTER_ID=2kE8VqPSTxW0628p_87f2A
    networks:
      - elk-network-prod

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch-prod
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
    ports:
      - "9202:9200"
    volumes:
      - elasticsearch_data_prod:/usr/share/elasticsearch/data
    networks:
      - elk-network-prod

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-prod
    depends_on:
      - elasticsearch
    ports:
      - "5046:5044"
      - "9602:9600"
    volumes:
      - ./logstash/pipeline/logstash-prod.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    networks:
      - elk-network-prod

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-prod
    depends_on:
      - elasticsearch
    ports:
      - "5603:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk-network-prod

  # Filebeat
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat-prod
    depends_on:
      - logstash
    volumes:
      - ./filebeat/filebeat-prod.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - elk-network-prod

volumes:
  postgres_data_prod:
  elasticsearch_data_prod:
  pgadmin_data_prod:
  kafka_data_prod:

networks:
  elk-network-prod:
    driver: bridge
